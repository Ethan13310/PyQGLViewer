
This project requires a recent version of SIP (tested with 4.5.2, 4.6 and 4.7), Qt4 and PyQt4.

Note: PyQt4 should be installed with its sip and development files. 
Binaries version provides by Riverbank unfortunatly do not include all these development files. You may have to recompile it.

First, you need build a customized version of
libQGLViewer. For this download a version of the sources:
http://artis.imag.fr/~Gilles.Debunne/QGLViewer/download.html
for linux, archive is:
http://artis.imag.fr/Members/Gilles.Debunne/QGLViewer/src/libQGLViewer-2.2.6-3.tar.gz
and for windows
http://artis.imag.fr/Members/Gilles.Debunne/QGLViewer/src/libQGLViewer-2.2.6-3.zip

Unzip the archive on your disk. For instance
> tar xvzf libQGLViewer-2.2.6-3.tar.gz

A directory libQGLViewer-2.2.6-3 should be created

The patch file libQGLViewer-2.2.6-3-py.patch can been found in PyQGLViewer/src dir. 

For info, it has been build with the following command
> diff -abur libQGLViewer-2.2.6-3 libQGLViewer-2.2.6-3-py > libQGLViewer-2.2.6-3-py.patch

To apply this patch , you should invoke the command
> patch -p 0 < libQGLViewer-2.2.6-3-py.patch

Note: The patch file has been built on windows sources. The end of line character is different on unix systems. 
On linux, you may thus have to convert first the patch file to unix convention with the following comand.
> dos2unix libQGLViewer-2.2.x-x-py.patch

Source are now ready to compile. 
Go into libQGLViewer-2.2.6-3/QGLViewer dir
> qmake-qt4 QGLViewer.pro
> make (or nmake)
> make install (you should be root on linux)
On windows to install the lib you should copy the QGLViewer225.dll
in library repository such as C:\WINDOWS\system32

To have designer plugin, you should go to libQGLViewer-2.2.6-3/designerPlugin
and invoke similar command
> qmake-qt4 designerPlugin.pro
> make (or nmake)
> make install (you should be root on linux)

libQGLViewer is now compiled and usable. Python wrapper can be build.
For this, you should simply do the following command
> python configure.py 
You should be root on linux to make it work. You can specify the 
source repository of libQGLViewer-2.2.6-3 with -Q option.
For instance 
> python configure.py -Q ../libQGLViewer-2.2.6-3

Note: on windows you may have to specify the include and lib directories also, using absolute paths
> python configure.py -Q ../libQGLViewer-2.2.6-3 -I c:\path_to_libQGLViewer-2.2.6-3 -L c:\path_to_libQGLViewer-2.2.6-3\QGLViewer\release

Then you simply have to compile and install with
> make (or nmake)
> make install (or nmake install, you should be root)

You can then test the new module with all examples
that you can find in the directory PyQGLViewer/examples.

Good luck,

Fred


------------
News:
The setup.py file has been updated to allow you to compile the project.
For this,
python setup.py build   # to compile
python setup.py install # to install on your system
python setup.py bdist   # to create a binary distribution


